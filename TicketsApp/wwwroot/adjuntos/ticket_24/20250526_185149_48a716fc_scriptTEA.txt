CREATE DATABASE IF NOT EXISTS clinica CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Usar la base de datos "clinica"
USE clinica;


-- Tabla Usuario
CREATE TABLE IF NOT EXISTS Usuario (
    id_usuario INT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    contrasena VARCHAR(500) NOT NULL,
    rol ENUM('especialista', 'admin', 'invitado') NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    direccion VARCHAR(200) NOT NULL,
    token VARCHAR(500) NULL,
    activo BOOLEAN NOT NULL
);

-- Tabla Especialista
CREATE TABLE IF NOT EXISTS Especialista (
    id_especialista INT PRIMARY KEY,
    telefono VARCHAR(9) NOT NULL,
    especialidad VARCHAR(100) NOT NULL,
    cod_especialista VARCHAR(12) UNIQUE NOT NULL,
    id_usuario INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Tabla Paciente
CREATE TABLE IF NOT EXISTS Paciente (
    id_paciente INT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    fecha_nacimiento DATE NOT NULL CHECK (fecha_nacimiento <= CURRENT_DATE AND fecha_nacimiento >= '1900-01-01'),
    sexo ENUM('F','M') NOT NULL
);


-- Tabla Encargado 
CREATE TABLE IF NOT EXISTS Encargado (
    id_encargado INT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    email VARCHAR(100) NULL,
    telefono VARCHAR(10) NOT NULL,
    dui VARCHAR(10) NOT NULL,
    direccion VARCHAR(100) NOT NULL
);

-- Tabla Encargado_Paciente CREATE TABLE IF NOT EXISTS Encargado_Paciente (
    id_encargado INT,
    id_paciente INT,
    activo TINYINT(1) DEFAULT 1,,
    PRIMARY KEY (id_encargado, id_paciente),
    FOREIGN KEY (id_encargado) REFERENCES Encargado(id_encargado),
    FOREIGN KEY (id_paciente) REFERENCES Paciente(id_paciente)
);


CREATE TABLE Evaluacion (
    id_evaluacion INT NOT NULL AUTO_INCREMENT,
    id_paciente INT NOT NULL,
    fecha_evaluacion DATETIME NOT NULL,
    id_encargado INT NOT NULL,
    paciente_verbal TINYINT(1) NOT NULL,
    id_usuario VARCHAR(255) NOT NULL,
    PRIMARY KEY (id_evaluacion),
    FOREIGN KEY (id_paciente) REFERENCES Paciente(id_paciente),
    FOREIGN KEY (id_encargado) REFERENCES Encargado(id_encargado),
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Tabla Test_ADIR
CREATE TABLE Test_ADIR (
    id_test INT NOT NULL AUTO_INCREMENT,
    id_evaluacion INT NOT NULL,
    resultado_final TEXT NULL,
    PRIMARY KEY (id_test),
    FOREIGN KEY (id_evaluacion) REFERENCES Evaluacion(id_evaluacion)
);



-- Tabla Dominio
CREATE TABLE IF NOT EXISTS Dominio (
    id_dominio INT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion VARCHAR(400) NOT NULL,
    codigo VARCHAR(20) NOT NULL
);

-- Tabla Item_ADIR
CREATE TABLE IF NOT EXISTS Item_ADIR (
    id_item INT PRIMARY KEY,
    id_dominio INT NOT NULL,
    titulo VARCHAR(255) NOT NULL,
    codigo INT NOT NULL UNIQUE,
    descripcion VARCHAR(200) NOT NULL,
    criterios_puntuacion LONGTEXT NOT NULL,
    criterios_evaluar LONGTEXT NOT NULL,
    item_verbal TINYINT(1) NOT NULL,
    FOREIGN KEY (id_dominio) REFERENCES Dominio(id_dominio)
);

-- Tabla Respuesta_ADIR
CREATE TABLE IF NOT EXISTS Respuesta_ADIR (
    id_respuesta INT PRIMARY KEY NOT NULL,
    id_test INT NOT NULL,
    id_item INT NOT NULL,
    puntaje_obtenido INT CHECK (puntaje_obtenido IN (0, 1, 2, 3, 7, 8, 9)) NOT NULL,
    puntaje_algoritmo INT NOT NULL,
    FOREIGN KEY (id_test) REFERENCES Test_ADIR(id_test),
    FOREIGN KEY (id_item) REFERENCES Item_ADIR(id_item)
);

-- Tabla Resultado_ADIR
CREATE TABLE IF NOT EXISTS Resultado_ADIR (
    id_resultado INT PRIMARY KEY,
    id_test INT NOT NULL,
    total_dominio_a INT NOT NULL,
    total_dominio_b INT NOT NULL,
    total_dominio_c INT NOT NULL,
    total_dominio_d INT NOT NULL,
    FOREIGN KEY (id_test) REFERENCES Test_ADIR(id_test)
);