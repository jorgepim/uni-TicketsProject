@using System.Linq
@model List<TicketsApp.Models.ViewModels.TicketAdminViewModel>

@{
    ViewData["Title"] = "Admin";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    // Paginación
    int pageSize = 20;
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalTickets = ViewBag.TotalTickets ?? 0;
    int totalPages = (int)Math.Ceiling((double)totalTickets / pageSize);
}

<div class="admin-container">
    <!-- Welcome Section -->
    <div class="welcome-section">
        @if (!string.IsNullOrEmpty(ViewBag.NombreCompleto as string))
        {
            <div class="welcome-card">
                <div class="welcome-content">
                    <div class="welcome-icon">
                        <i class="icon-user"></i>
                    </div>
                    <div class="welcome-info">
                        <h4 class="welcome-title">Bienvenido, @ViewBag.NombreCompleto</h4>
                        <p class="welcome-details">@ViewBag.Email | Rol: @ViewBag.Rol</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Header Section -->
    <div class="admin-header">
        <div class="header-content">
            <h2 class="page-title">
                <i class="icon-tickets"></i>
                Tickets Recientes
            </h2>
            <div class="header-actions">
                <button class="btn-filter">
                    <i class="icon-filter"></i>
                    Filtrar
                </button>
                <a href="@Url.Action("AgregarUsuario")" class="btn-primary">
                    <i class="bi bi-person-fill-add"></i>
                    Agregar Usuario
                </a>
                <a href="@Url.Action("Crear", "TicketGeneral", new { returnUrl = Url.ActionContext.HttpContext.Request.Path })" class="btn btn-success">
                    <i class="bi bi-ticket-perforated"></i>
                    Crear Ticket
                </a>
            </div>
        </div>
    </div>

    <!-- Tickets Table -->
    <div class="tickets-table-container">
        <table class="tickets-table">
            <thead>
                <tr>
                    <th class="col-id">ID</th>
                    <th class="col-asunto">Asunto</th>
                    <th class="col-cliente">Cliente</th>
                    <th class="col-asignado">Asignado a</th>
                    <th class="col-categoria">Categoría</th>
                    <th class="col-prioridad">Prioridad</th>
                    <th class="col-estado">Estado</th>
                    <th class="col-acciones">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var ticket in Model)
                    {
                        <tr class="ticket-row">
                            <td class="ticket-id">#TK@(ticket.TicketId.ToString("D4"))</td>
                            <td class="ticket-asunto">
                                <div class="asunto-content">
                                    <span class="titulo">@ticket.Titulo</span>
                                    @if (!string.IsNullOrEmpty(ticket.Descripcion))
                                    {
                                        <span class="descripcion">@(ticket.Descripcion.Length > 60 ? ticket.Descripcion.Substring(0, 60) + "..." : ticket.Descripcion)</span>
                                    }
                                </div>
                            </td>
                            <td class="ticket-cliente">
                                @(string.IsNullOrEmpty(ticket.NombreEmpresa) ? "Fix|Now" : ticket.NombreEmpresa)
                            </td>
                            <td class="ticket-asignado">
                                @if (!string.IsNullOrEmpty(ticket.UsuarioAsignado))
                                {
                                    <span>@ticket.UsuarioAsignado</span>
                                }
                                else
                                {
                                    <span class="sin-asignar">Sin asignar</span>
                                }
                            </td>
                            <td class="ticket-categoria">
                                <span class="categoria-badge">@ticket.NombreCategoria</span>
                            </td>
                            <td class="ticket-prioridad">
                                @switch (ticket.Prioridad)
                                {
                                    case "Crítico":
                                        <span class="prioridad-badge critico">
                                            <span class="dot"></span>
                                            Crítico
                                        </span>
                                        break;
                                    case "Importante":
                                        <span class="prioridad-badge importante">
                                            <span class="dot"></span>
                                            Importante
                                        </span>
                                        break;
                                    case "Baja":
                                        <span class="prioridad-badge baja">
                                            <span class="dot"></span>
                                            Baja
                                        </span>
                                        break;
                                    default:
                                        <span class="prioridad-badge normal">
                                            <span class="dot"></span>
                                            @ticket.Prioridad
                                        </span>
                                        break;
                                }
                            </td>
                            <td class="ticket-estado">
                                @{
                                    string estadoClass = "";
                                    switch (ticket.NombreEstado?.ToLower())
                                    {
                                        case "abierto":
                                            estadoClass = "abierto";
                                            break;
                                        case "asignado":
                                            estadoClass = "asignado";
                                            break;
                                        case "en progreso":
                                            estadoClass = "en-progreso";
                                            break;
                                        case "en espera":
                                            estadoClass = "en-espera";
                                            break;
                                        case "resuelto":
                                            estadoClass = "resuelto";
                                            break;
                                        case "reabierto":
                                            estadoClass = "reabierto";
                                            break;
                                        case "cerrado":
                                            estadoClass = "cerrado";
                                            break;
                                        case "cancelado":
                                            estadoClass = "cancelado";
                                            break;
                                        default:
                                            estadoClass = "normal";
                                            break;
                                    }
                                }
                                <span class="estado-badge @estadoClass">@ticket.NombreEstado</span>
                            </td>
                            <td class="ticket-acciones">
                                <div class="acciones-group">
                                    <a href="@Url.Action("Detalles", new { id = ticket.TicketId })" class="action-btn view" title="Ver detalles">
                                        <i class="icon-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Editar", new { id = ticket.TicketId })" class="action-btn edit" title="Editar">
                                        <i class="icon-edit"></i>
                                    </a>
                                    <button class="action-btn more" title="Más opciones">
                                        <i class="icon-more"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="empty-state">
                            <div class="empty-content">
                                <i class="icon-inbox"></i>
                                <p>No hay tickets para mostrar</p>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @if (totalPages > 1)
    {
        <div class="pagination-container">
            <div class="pagination-info">
                Mostrando @((currentPage - 1) * pageSize + 1) - @(Math.Min(currentPage * pageSize, totalTickets)) de @totalTickets tickets
            </div>
            <nav class="pagination">
                <a href="@Url.Action("Index", new { page = currentPage - 1 })" class="page-btn prev @(currentPage <= 1 ? "disabled" : "")">
                    <i class="icon-chevron-left"></i>
                </a>

                @{
                    int startPage = Math.Max(1, currentPage - 2);
                    int endPage = Math.Min(totalPages, currentPage + 2);
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <a href="@Url.Action("Index", new { page = i })" class="page-btn @(i == currentPage ? "active" : "")">
                        @i
                    </a>
                }

                <a href="@Url.Action("Index", new { page = currentPage + 1 })" class="page-btn next @(currentPage >= totalPages ? "disabled" : "")">
                    <i class="icon-chevron-right"></i>
                </a>
            </nav>
        </div>
    }
</div>

<style>
    /* Iconos usando CSS */
    .icon-tickets::before {
        content: "🎫";
    }

    .icon-filter::before {
        content: "🔍";
    }

    .icon-plus::before {
        content: "➕";
    }

    .icon-eye::before {
        content: "👁";
    }

    .icon-edit::before {
        content: "✏️";
    }

    .icon-more::before {
        content: "⋯";
    }

    .icon-inbox::before {
        content: "📥";
    }

    .icon-chevron-left::before {
        content: "‹";
    }

    .icon-chevron-right::before {
        content: "›";
    }

    .icon-user::before {
        content: "👤";
    }

    /* Variables CSS */
    :root {
        --primary-blue: #3b82f6;
        --secondary-blue: #e7f3ff;
        --text-dark: #1f2937;
        --text-gray: #6b7280;
        --text-light: #9ca3af;
        --border-light: #e5e7eb;
        --bg-white: #ffffff;
        --bg-gray: #f9fafb;
        --success-green: #10b981;
        --warning-orange: #f59e0b;
        --danger-red: #ef4444;
        --info-blue: #3b82f6;
    }

    /* Layout Principal */
    .admin-container {
        background: var(--bg-white);
        min-height: 100vh;
        padding: 24px;
    }

    /* Welcome Section */
    .welcome-section {
        margin-bottom: 24px;
    }

    .welcome-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 12px;
        padding: 20px;
        color: white;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.15);
    }

    .welcome-content {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .welcome-icon {
        width: 48px;
        height: 48px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
    }

    .welcome-info {
        flex: 1;
    }

    .welcome-title {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 4px 0;
    }

    .welcome-details {
        font-size: 14px;
        margin: 0;
        opacity: 0.9;
    }

    /* Header */
    .admin-header {
        margin-bottom: 24px;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
    }

    .page-title {
        font-size: 24px;
        font-weight: 600;
        color: var(--text-dark);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .header-actions {
        display: flex;
        gap: 12px;
    }

    .btn-filter {
        background: var(--bg-white);
        border: 1px solid var(--border-light);
        padding: 8px 16px;
        border-radius: 8px;
        color: var(--text-gray);
        cursor: pointer;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 6px;
        transition: all 0.2s;
    }

        .btn-filter:hover {
            background: var(--bg-gray);
            border-color: var(--primary-blue);
        }

    .btn-primary {
        background: var(--primary-blue);
        color: white;
        padding: 8px 16px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 14px;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 6px;
        transition: all 0.2s;
        border: none;
    }

        .btn-primary:hover {
            background: #2563eb;
            color: white;
            text-decoration: none;
        }

    /* Tabla */
    .tickets-table-container {
        background: var(--bg-white);
        border-radius: 12px;
        border: 1px solid var(--border-light);
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .tickets-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

        .tickets-table thead {
            background: var(--bg-gray);
        }

        .tickets-table th {
            padding: 16px 12px;
            text-align: left;
            font-weight: 600;
            color: var(--text-gray);
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .tickets-table td {
            padding: 16px 12px;
            border-bottom: 1px solid var(--border-light);
            vertical-align: middle;
        }

    .ticket-row:hover {
        background: var(--bg-gray);
    }

    /* Columnas específicas */
    .col-id {
        width: 8%;
    }

    .col-asunto {
        width: 25%;
    }

    .col-cliente {
        width: 15%;
    }

    .col-asignado {
        width: 15%;
    }

    .col-categoria {
        width: 12%;
    }

    .col-prioridad {
        width: 10%;
    }

    .col-estado {
        width: 10%;
    }

    .col-acciones {
        width: 5%;
    }

    /* Contenido de celdas */
    .ticket-id {
        font-family: 'Courier New', monospace;
        font-weight: 600;
        color: var(--text-gray);
    }

    .asunto-content {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .titulo {
        font-weight: 500;
        color: var(--text-dark);
        line-height: 1.4;
    }

    .descripcion {
        font-size: 12px;
        color: var(--text-light);
        line-height: 1.3;
    }

    .ticket-cliente {
        color: var(--text-gray);
        font-weight: 500;
    }

    .ticket-asignado {
        color: var(--text-gray);
    }

    .sin-asignar {
        color: var(--text-light);
        font-style: italic;
    }

    /* Badges */
    .categoria-badge {
        background: #f0f9ff;
        color: #0369a1;
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 500;
        border: 1px solid #bae6fd;
    }

    .prioridad-badge {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        font-weight: 500;
    }

        .prioridad-badge .dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }

        .prioridad-badge.critico {
            color: var(--danger-red);
        }

            .prioridad-badge.critico .dot {
                background: var(--danger-red);
            }

        .prioridad-badge.importante {
            color: var(--warning-orange);
        }

            .prioridad-badge.importante .dot {
                background: var(--warning-orange);
            }

        .prioridad-badge.baja {
            color: var(--success-green);
        }

            .prioridad-badge.baja .dot {
                background: var(--success-green);
            }

    .estado-badge {
        padding: 4px 12px;
        border-radius: 16px;
        font-size: 12px;
        font-weight: 500;
        text-align: center;
        min-width: 80px;
        display: inline-block;
    }

        .estado-badge.abierto {
            background: #dbeafe;
            color: #1e40af;
        }

        .estado-badge.asignado {
            background: #e0f2fe;
            color: #0369a1;
        }

        .estado-badge.en-progreso {
            background: #fef3c7;
            color: #d97706;
        }

        .estado-badge.en-espera {
            background: #fde68a;
            color: #92400e;
        }

        .estado-badge.resuelto {
            background: #d1fae5;
            color: #059669;
        }

        .estado-badge.reabierto {
            background: #fed7d7;
            color: #c53030;
        }

        .estado-badge.cerrado {
            background: #e2e8f0;
            color: #4a5568;
        }

        .estado-badge.cancelado {
            background: #fee2e2;
            color: #dc2626;
        }

    /* Acciones */
    .acciones-group {
        display: flex;
        gap: 4px;
    }

    .action-btn {
        width: 32px;
        height: 32px;
        border-radius: 6px;
        border: 1px solid var(--border-light);
        background: var(--bg-white);
        color: var(--text-gray);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
    }

        .action-btn:hover {
            background: var(--bg-gray);
            border-color: var(--primary-blue);
            color: var(--primary-blue);
            text-decoration: none;
        }

    /* Estado vacío */
    .empty-state {
        text-align: center;
        padding: 48px 24px;
    }

    .empty-content {
        color: var(--text-light);
    }

        .empty-content i {
            font-size: 48px;
            margin-bottom: 16px;
            display: block;
        }

    /* Paginación */
    .pagination-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 24px;
        padding-top: 16px;
    }

    .pagination-info {
        color: var(--text-gray);
        font-size: 14px;
    }

    .pagination {
        display: flex;
        gap: 4px;
    }

    .page-btn {
        padding: 8px 12px;
        border: 1px solid var(--border-light);
        background: var(--bg-white);
        color: var(--text-gray);
        text-decoration: none;
        border-radius: 6px;
        transition: all 0.2s;
        min-width: 40px;
        text-align: center;
    }

        .page-btn:hover:not(.disabled) {
            background: var(--bg-gray);
            border-color: var(--primary-blue);
            color: var(--primary-blue);
            text-decoration: none;
        }

        .page-btn.active {
            background: var(--primary-blue);
            border-color: var(--primary-blue);
            color: white;
        }

        .page-btn.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            pointer-events: none;
        }

   
</style>